@namespace UteamUP.Client.Components.Inputs
@inherits InputBase<string>

<div class="input-container">
    @if (!string.IsNullOrEmpty(Label))
    {
        <label class="form-label">@Label</label>
    }

    <BSInput InputType="InputType.Select" @bind-Value="CurrentValue">
        @if (string.IsNullOrWhiteSpace(SelectetValue))
        {
            <option disabled selected value="">Select</option>
        }

        @foreach (var option in Options)
        {
            if(option.Key == SelectetValue)
            {
                <option selected value="@option.Value">@option.Key</option>
            }
            else
            {
                <option value="@option.Value">@option.Key</option>
            }
        }
    </BSInput>

    <ValidationMessage For="ValueExpression" />
</div>

@code {
    private int _iconSize = 20;

    [Parameter]
    public Icon Icon { get; set; }

    [Parameter]
    public string Placeholder { get; set; }

    [Parameter]
    public IDictionary<string, string> Options { get; set; }

    [Parameter]
    public string Label { get; set; }
    
    [Parameter]
    public string SelectetValue { get; set; }

    protected override bool TryParseValueFromString(string value, [MaybeNullWhen(false)] out string result, [NotNullWhen(false)] out string validationErrorMessage)
    {
        result = value;
        validationErrorMessage = null;
        return true;
    }
}
