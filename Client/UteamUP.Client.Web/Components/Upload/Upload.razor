@page "/upload-document"
<div class="input-container" style="width: 650px; margin-left: auto; margin-right: auto;">
    <HorizonFileUpload @ref="fileUpload" 
                       AllowedFileTypes="allowedTypes" 
                       OnChange="HandleFileChange" />
    <div class="input-container" style="padding-left: 190px; padding-top: 20px;">
        <HorizonButton OnClick="SubmitFiles">Save</HorizonButton>
        <HorizonButton OnClick="ClearFiles">Clear</HorizonButton>
    </div>
</div>

@code {
    private HorizonFileUpload fileUpload;
    private List<IBrowserFile> uploadedFiles = new List<IBrowserFile>(); // Declare the property for uploaded files
    
    private string[] allowedTypes = new string[] { "image/png", "image/jpeg", "image/gif", "image/tiff" };

    
    
    private void HandleFileChange(List<IBrowserFile> files)
    {
        uploadedFiles = files;
    }
    
    private void ClearFiles()
    {
        uploadedFiles.Clear();
    }
    
    private async Task SubmitFiles()
    {
        if (uploadedFiles != null && uploadedFiles.Any())
        {
            foreach (var file in uploadedFiles)
            {
                // Get the file stream
                var stream = file.OpenReadStream();
                
                // Get the file name
                var fileName = file.Name;
                
                // Get the file size
                var fileSize = file.Size;
                
                // Get the file bytes
                var fileBytes = new byte[fileSize];
                
                await stream.ReadAsync(fileBytes, 0, (int)fileSize);
                
                // Save the file to wwwroot/files
                var path = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "files", fileName);
                
                using (var fileStream = new FileStream(path, FileMode.Create, FileAccess.Write))
                {
                    using (var outputStream = new FileStream(path, FileMode.Create))
                    {
                        await fileStream.CopyToAsync(outputStream);
                    }
                }
            }
        }
    }

}