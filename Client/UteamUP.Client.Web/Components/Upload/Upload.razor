@page "/upload-document"
@inject IBlobStorageWebService BlobStorageWebService

<div class="input-container" style="width: 650px; margin-left: auto; margin-right: auto;">
    <HorizonFileUpload @ref="fileUpload"
                       AllowedFileTypes="allowedTypes"
                       AllowedFileSize="50 * 1024 * 1024"
                       OnChange="HandleFileChange"/>
    <div class="input-container" style="padding-left: 190px; padding-top: 20px;">
        <HorizonButton OnClick="SubmitFiles">Save</HorizonButton>
        <HorizonButton OnClick="ClearFiles">Remove</HorizonButton>
    </div>
</div>

@code {
    private HorizonFileUpload fileUpload;
    private List<IBrowserFile> uploadedFiles = new(); // Declare the property for uploaded files

    private string[] allowedTypes = new string[] { "image/png", "image/jpeg", "image/gif", "image/svg" };
    
    string? _oid = "";
    int _tenantId = 0;

    protected override async Task OnInitializedAsync()
    {
        _oid = UserState.User.Oid;
        _tenantId = UserState.User.DefaultTenantId;
    }

    private void HandleFileChange(List<IBrowserFile> files)
    {
        uploadedFiles = files;
    }

    private void ClearFiles()
    {
        uploadedFiles.Clear();
    }

    private async Task SubmitFiles()
    {
        if (uploadedFiles != null && uploadedFiles.Any())
        {
            foreach (var file in uploadedFiles)
            {
                var stream = file.OpenReadStream();
                
                if (stream.Length == 0)
                {
                    Console.WriteLine("The file is empty.");
                }

                var fileName = file.Name;
                var blobContainerName = "images";

                try{
                    var blobPath = $"{_tenantId.ToString()}/{_oid}/{fileName}";

                    var saved = await BlobStorageWebService.UploadImagesAsync(blobContainerName, stream, fileName, blobPath);
                    if(saved.IsSuccess){
                        Console.WriteLine(saved.Message);
                    }
                    else
                    {
                        Console.WriteLine(saved.Message);
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Error writing file: {ex.Message}");
                }
            }
        }
    }
}