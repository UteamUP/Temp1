@page "/upload-document"
<div class="input-container" style="width: 650px; margin-left: auto; margin-right: auto;">
    <HorizonFileUpload @ref="fileUpload"
                       AllowedFileTypes="allowedTypes"
                       AllowedFileSize="50 * 1024 * 1024"
                       OnChange="HandleFileChange"/>
    <div class="input-container" style="padding-left: 190px; padding-top: 20px;">
        <HorizonButton OnClick="SubmitFiles">Save</HorizonButton>
        <HorizonButton OnClick="ClearFiles">Remove</HorizonButton>
    </div>
</div>

@code {
    private HorizonFileUpload fileUpload;
    private List<IBrowserFile> uploadedFiles = new(); // Declare the property for uploaded files

    private string[] allowedTypes = new string[] { "image/png", "image/jpeg", "image/gif", "image/tiff" };

    private void HandleFileChange(List<IBrowserFile> files)
    {
        uploadedFiles = files;
    }

    private void ClearFiles()
    {
        uploadedFiles.Clear();
    }

    private async Task SubmitFiles()
    {
        if (uploadedFiles != null && uploadedFiles.Any())
        {
            foreach (var file in uploadedFiles)
            {
    // Get the file stream
                var stream = file.OpenReadStream();

    // Check if the file contains any stream
                if (stream.Length == 0)
                {
                    Console.WriteLine("The file is empty.");
                }

    // Get the file name
                var fileName = file.Name;

    // Save the file to wwwroot/files
                var directoryPath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "assets");
                var filePath = Path.Combine(directoryPath, fileName);

    // Create the directory if it doesn't exist
                Directory.CreateDirectory(directoryPath);

                using (var fileStream = new FileStream(filePath, FileMode.Create, FileAccess.Write))
                {
    // Print out the filename and the filepath
                    Console.WriteLine($"{filePath}");

                    await stream.CopyToAsync(fileStream);

    // Check if the file has been saved by opening the file and checking if it contains any stream

                    var savedFile = new FileInfo(filePath);

    // Get full directory path of the savedfiLE
                    var savedFilePath = Path.Combine(directoryPath, savedFile.Name);
                    Console.WriteLine($"{savedFilePath}");

    // Open the file into a new stream to check if it has been saved
                    var savedFileStream = new FileStream(savedFilePath, FileMode.Open, FileAccess.Read);

    // Check if the file has been saved
                    if (savedFileStream.Length == 0)
                    {
                        Console.WriteLine("The file has not been saved.");
                    }
                    else
                    {
                        Console.WriteLine("The file path and name is: " + savedFileStream.Name);

    // Read the contents of the file and print it out
                        using (var reader = new StreamReader(savedFileStream))
                        {
                            var fileContents = await reader.ReadToEndAsync();
                            Console.WriteLine(fileContents);
                        }
                    }
    // Close the savedFileStream
                    savedFileStream.Close();

    // Close the filestream
                    fileStream.Close();
                }
            }
        }
    }

}

}