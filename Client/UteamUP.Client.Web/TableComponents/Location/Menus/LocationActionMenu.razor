@using UteamUP.Client.Web.Components

<HorizonActionMenu>
    <BSDropdownItem OnClick="@(() => HandleOnClickAsync(LocationActionMenuAction.Detail))" style="color: rgb(25, 103, 54);" Class="item-text-drop"><HorizonIcon Icon="@Icons.Detail" Width="16" Height="18" /> Detail</BSDropdownItem>
    <BSDropdownItem OnClick="@(() => HandleOnClickAsync(LocationActionMenuAction.Delete))" style="color: rgb(235, 87, 87);" Class="item-log-out"><HorizonIcon Icon="@Icons.Delete" Width="16" Height="18" /> Delete</BSDropdownItem>
    <BSDropdownItem OnClick="@(() => HandleOnClickAsync(LocationActionMenuAction.Edit))" style="color: rgb(32, 107, 181);" Class="item-log-out"><HorizonIcon Icon="@Icons.Edit" Width="16" Height="18" /> Edit</BSDropdownItem>
    <BSDropdownItem OnClick="@(() => HandleOnClickAsync(LocationActionMenuAction.Workorders))" style="color: rgb(26, 70, 151);" Class="item-log-out"><HorizonIcon Icon="@Icons.Workorders" Width="16" Height="18" /> Workorders</BSDropdownItem>
    <BSDropdownItem OnClick="@(() => HandleOnClickAsync(LocationActionMenuAction.PartList))" style="color: rgb(247, 173, 26);" Class="item-log-out"><HorizonIcon Icon="@Icons.PartsList" Width="16" Height="18" /> Part list</BSDropdownItem>
</HorizonActionMenu>

@code {
    public enum LocationActionMenuAction
    {
        Detail,
        Delete,
        Edit,
        Workorders,
        PartList
    }

    private async Task HandleOnClickAsync(LocationActionMenuAction action)
    {
        await OnClick.InvokeAsync(action);
    }

    [Parameter]
    public EventCallback<LocationActionMenuAction> OnClick { get; set; }
}